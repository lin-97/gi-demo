import{u as e}from"./index-CrcSV7hi.js";import{c as n,d as t}from"./data-DMJbYYJT.js";import{_ as a}from"./index-DKPnCvLQ.js";import{_ as l}from"./GiForm-C2SFNo8b.js";import{O as s,a as o}from"./regexp-CZKnpGWl.js";import{d as r,e as i,V as p,I as d,c as m,i as u,f,a5 as c,D as b,o as y,a as g,w as x,h,j as v,E as w,t as C,a8 as k,M as _}from"./index-CTftGuoI.js";import{u as I}from"./useDict-CqZsxzDW.js";const R=r({__name:"Card2",setup(r){const{width:R}=e(),{data:j}=I({code:"status"}),P=i(!0),S=p({name:"",phone:"",sort:0,sex:"",birthday:"",hobbys:[],status:1,mark:0,hide:!1,grade:0,test:"",remark:""}),V=d("formRef"),q=m((()=>[{type:"group-title",label:"基本信息",field:"base-title",span:24,formItemProps:{labelColStyle:{display:"none"}}},{type:"input",label:"姓名",field:"name",props:{maxLength:4},rules:[{required:P.value,message:"请输入姓名"},{maxLength:4,message:"姓名不超过4个字符"},{match:s,message:"仅支持中文姓名"}],slots:{prepend:()=>u(f("icon-face-smile-fill"),null,null),append:()=>c("span",{style:{color:"red",fontSize:"12px"}},"中文")}},{type:"input",label:"手机",field:"phone",props:{maxLength:11},rules:[{required:!!S.name,message:"请输入手机号"},{match:o,message:"手机号格式不正确"}],slots:{prepend:"+86"}},{type:"select",label:"性别",field:"sex",required:!0,props:{options:[{label:"男",value:1},{label:"女",value:0}]}},{type:"date-picker",label:"生日",field:"birthday"},{type:"checkbox-group",label:"爱好",field:"hobbys",span:24,props:{options:[{label:"电影",value:"01"},{label:"音乐",value:"02"},{label:"旅行",value:"03"},{label:"游戏",value:"04"}]},slots:{label:({data:e})=>u("span",{style:{color:"red"}},[u("span",null,[e.label]),u(f("icon-face-smile-fill"),null,null)])}},{type:"input-number",label:"排序",field:"sort",props:{min:0}},{type:"radio-group",label:()=>u("div",null,[u("span",null,[b("状态")]),u(f("a-tooltip"),{content:"这里使用了tsx自定义渲染"},{default:()=>[u(f("icon-info-circle-fill"),{style:{color:"#52B852"}},null)]})]),field:"status",props:{options:j.value}},{label:"测试",field:"test",disabled:e=>0===e.status,formItemProps:{extra:"查看这里效果请切换状态"}},{type:"rate",label:"评分",field:"mark",formItemSlots:{extra:()=>u(f("a-tag"),null,{default:()=>[b("这里使用了tsx自定义渲染")]})}},{type:"switch",label:"是否隐藏",field:"hide",formItemProps:{extra:"隐藏成绩项"}},{type:"slider",label:"成绩",field:"grade",span:24,hide:e=>(e.hide&&(e.grade=0),!0===e.hide)},{type:"group-title",label:"分组标题1",field:"group-title1",span:24,formItemProps:{labelColStyle:{display:"none"}}},{type:"cascader",label:"城市",field:"city",props:{options:n},disabled:e=>0===e.status},{type:"tree-select",label:"部门",field:"dept",props:{data:t},disabled:e=>0===e.status},{type:"group-title",label:"分组标题2",field:"group-title2",span:24,formItemProps:{labelColStyle:{display:"none"}}},{type:"textarea",label:"备注",field:"remark",span:24,formItemProps:{extra:"这里是额外信息"}},{type:"upload",label:"附件",field:"file",span:24,props:{listType:"picture-card",action:"/"},formItemProps:{extra:"上传文件只支持zip、rar、doc、docx、pdf、jpg、png格式"}},{field:"btns",span:24}])),G=()=>{k.open({title:"数据结构",content:()=>c(a,{codeJson:"\n<template>\n  <a-card title=\"配置表单-新增\">\n    <template #extra>\n      <a-space>\n        <a-button type=\"primary\" @click=\"isNameRequired = !isNameRequired\">姓名必填动态设置</a-button>\n        <a-button type=\"primary\" status=\"warning\" @click=\"onViewCode\">\n          <template #icon><icon-code /></template>\n          <span>查看代码</span>\n        </a-button>\n      </a-space>\n    </template>\n    <a-row :gutter=\"30\">\n      <a-col :xs=\"24\" :sm=\"24\" :md=\"12\">\n        <GiForm ref=\"formRef\" v-model=\"form\" :columns=\"columns\">\n          <template #test=\"{ disabled }\"> 自定义插槽-禁用状态：{{ disabled }} </template>\n          <template #btns>\n            <a-row justify=\"end\" class=\"w-full\">\n              <a-space>\n                <a-button type=\"primary\" @click=\"save\">保存</a-button>\n                <a-button @click=\"reset\">重置</a-button>\n              </a-space>\n            </a-row>\n          </template>\n        </GiForm>\n      </a-col>\n      <a-col :xs=\"24\" :sm=\"24\" :md=\"12\">\n        <GiCodeView :code-json=\"JSON.stringify(form, null, '\t')\"></GiCodeView>\n      </a-col>\n    </a-row>\n  </a-card>\n</template>\n\n<script setup lang=\"tsx\">\nimport { Drawer, Message } from '@arco-design/web-vue'\nimport { useWindowSize } from '@vueuse/core'\nimport { cityOptions, deptData } from './data'\nimport Card2Json from './code/card2-json'\nimport GiCodeView from '@/components/GiCodeView/index.vue'\nimport { type ColumnItem, GiForm } from '@/components/GiForm'\nimport * as Regexp from '@/utils/regexp'\nimport { useDict } from '@/hooks/app'\n\nconst { width } = useWindowSize()\nconst { data: status_options } = useDict({ code: 'status' })\nconst isNameRequired = ref(true)\n\nconst form = reactive({\n  name: '',\n  phone: '',\n  sort: 0,\n  sex: '',\n  birthday: '',\n  hobbys: [],\n  status: 1,\n  mark: 0,\n  hide: false,\n  grade: 0,\n  test: '',\n  remark: ''\n})\n\nconst formRef = useTemplateRef('formRef')\n\nconst columns = computed(() => [\n  {\n    type: 'group-title',\n    label: '基本信息',\n    field: 'base-title',\n    span: 24,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'input',\n    label: '姓名',\n    field: 'name',\n    props: {\n      maxLength: 4\n    },\n    rules: [\n      { required: isNameRequired.value, message: '请输入姓名' },\n      { maxLength: 4, message: '姓名不超过4个字符' },\n      { match: Regexp.OnlyCh, message: '仅支持中文姓名' }\n    ],\n    slots: {\n      prepend: () => <icon-face-smile-fill />,\n      append: () => h('span', { style: { color: 'red', fontSize: '12px' } }, '中文')\n    }\n  },\n  {\n    type: 'input',\n    label: '手机',\n    field: 'phone',\n    props: {\n      maxLength: 11\n    },\n    rules: [\n      { required: !!form.name, message: '请输入手机号' }, // 如果有name的时候，手机号必填（动态rules示例）\n      { match: Regexp.Phone, message: '手机号格式不正确' }\n    ],\n    slots: {\n      prepend: '+86'\n    }\n  },\n  {\n    type: 'select',\n    label: '性别',\n    field: 'sex',\n    required: true,\n    props: {\n      options: [\n        { label: '男', value: 1 },\n        { label: '女', value: 0 }\n      ]\n    }\n  },\n  {\n    type: 'date-picker',\n    label: '生日',\n    field: 'birthday'\n  },\n  {\n    type: 'checkbox-group',\n    label: '爱好',\n    field: 'hobbys',\n    span: 24,\n    props: {\n      options: [\n        { label: '电影', value: '01' },\n        { label: '音乐', value: '02' },\n        { label: '旅行', value: '03' },\n        { label: '游戏', value: '04' }\n      ]\n    },\n    slots: {\n      label: ({ data }) => (\n        <span style={{ color: 'red' }}>\n          <span>{data.label}</span>\n          <icon-face-smile-fill />\n        </span>\n      )\n    }\n  },\n  {\n    type: 'input-number',\n    label: '排序',\n    field: 'sort',\n    props: {\n      min: 0\n    }\n  },\n  {\n    type: 'radio-group',\n    label: () => (\n      <div>\n        <span>状态</span>\n        <a-tooltip content=\"这里使用了tsx自定义渲染\">\n          <icon-info-circle-fill style={{ color: '#52B852' }} />\n        </a-tooltip>\n      </div>\n    ),\n    field: 'status',\n    props: {\n      options: status_options.value // 这里使用了字典\n    }\n  },\n  {\n    label: '测试',\n    field: 'test',\n    disabled: (i) => i.status === 0,\n    formItemProps: { extra: '查看这里效果请切换状态' }\n  },\n  {\n    type: 'rate',\n    label: '评分',\n    field: 'mark',\n    formItemSlots: {\n      extra: () => <a-tag>这里使用了tsx自定义渲染</a-tag>\n    }\n  },\n  {\n    type: 'switch',\n    label: '是否隐藏',\n    field: 'hide',\n    formItemProps: { extra: '隐藏成绩项' }\n  },\n  {\n    type: 'slider',\n    label: '成绩',\n    field: 'grade',\n    span: 24,\n    hide: (i) => {\n      i.hide && (i.grade = 0)\n      return i.hide === true\n    }\n  },\n  {\n    type: 'group-title',\n    label: '分组标题1',\n    field: 'group-title1',\n    span: 24,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'cascader',\n    label: '城市',\n    field: 'city',\n    props: {\n      options: cityOptions\n    },\n    disabled: (i) => i.status === 0\n  },\n  {\n    type: 'tree-select',\n    label: '部门',\n    field: 'dept',\n    props: {\n      data: deptData\n    },\n    disabled: (i) => i.status === 0\n  },\n  {\n    type: 'group-title',\n    label: '分组标题2',\n    field: 'group-title2',\n    span: 24,\n    formItemProps: {\n      labelColStyle: { display: 'none' }\n    }\n  },\n  {\n    type: 'textarea',\n    label: '备注',\n    field: 'remark',\n    span: 24,\n    formItemProps: { extra: '这里是额外信息' }\n  },\n  {\n    type: 'upload',\n    label: '附件',\n    field: 'file',\n    span: 24,\n    props: {\n      listType: 'picture-card',\n      action: '/'\n    },\n    formItemProps: {\n      extra: '上传文件只支持zip、rar、doc、docx、pdf、jpg、png格式'\n    }\n  },\n  {\n    field: 'btns',\n    span: 24\n  }\n] as ColumnItem<typeof form>[])\n\nconst onViewCode = () => {\n  Drawer.open({\n    title: '数据结构',\n    content: () => h(GiCodeView, { codeJson: Card2Json, type: 'vue' }),\n    width: width.value < 560 ? '100%' : 560\n  })\n}\n\nconst save = async () => {\n  const error = await formRef.value?.formRef?.validate()\n  if (error) return false\n  Message.success('验证通过')\n}\n\nconst reset = () => {\n  formRef.value?.formRef?.resetFields()\n}\n<\/script>\n\n<style lang=\"scss\" scoped></style>\n",type:"vue"}),width:R.value<560?"100%":560})},D=async()=>{var e,n;if(await(null==(n=null==(e=V.value)?void 0:e.formRef)?void 0:n.validate()))return!1;_.success("验证通过")},F=()=>{var e,n;null==(n=null==(e=V.value)?void 0:e.formRef)||n.resetFields()};return(e,n)=>{const t=f("a-button"),s=f("icon-code"),o=f("a-space"),r=f("a-row"),i=f("a-col"),p=f("a-card");return y(),g(p,{title:"配置表单-新增"},{extra:x((()=>[u(o,null,{default:x((()=>[u(t,{type:"primary",onClick:n[0]||(n[0]=e=>P.value=!h(P))},{default:x((()=>n[2]||(n[2]=[b("姓名必填动态设置")]))),_:1}),u(t,{type:"primary",status:"warning",onClick:G},{icon:x((()=>[u(s)])),default:x((()=>[n[3]||(n[3]=v("span",null,"查看代码",-1))])),_:1})])),_:1})])),default:x((()=>[u(r,{gutter:30},{default:x((()=>[u(i,{xs:24,sm:24,md:12},{default:x((()=>[u(h(l),{ref_key:"formRef",ref:V,modelValue:h(S),"onUpdate:modelValue":n[1]||(n[1]=e=>w(S)?S.value=e:null),columns:h(q)},{test:x((({disabled:e})=>[b(" 自定义插槽-禁用状态："+C(e),1)])),btns:x((()=>[u(r,{justify:"end",class:"w-full"},{default:x((()=>[u(o,null,{default:x((()=>[u(t,{type:"primary",onClick:D},{default:x((()=>n[4]||(n[4]=[b("保存")]))),_:1}),u(t,{onClick:F},{default:x((()=>n[5]||(n[5]=[b("重置")]))),_:1})])),_:1})])),_:1})])),_:1},8,["modelValue","columns"])])),_:1}),u(i,{xs:24,sm:24,md:12},{default:x((()=>[u(a,{"code-json":JSON.stringify(h(S),null,"\t")},null,8,["code-json"])])),_:1})])),_:1})])),_:1})}}});export{R as _};
